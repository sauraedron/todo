openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: >-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification. 
    You can find out more about

    Swagger at [https://swagger.io](https://swagger.io). In the third iteration
    of the pet store, we've switched to the design first approach!

    You can now help us improve the API whether it's by making changes to the
    definition itself or to the code.

    That way, with time, we can improve the API in general, and expose some of
    the new features in OAS3.


    _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then
    click
    [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml).
    Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu
    option!_


    Some useful links:

    - [The Pet Store
    repository](https://github.com/swagger-api/swagger-petstore)

    - [The source API definition for the Pet
    Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://petstore3.swagger.io/api/v3
paths:
  /tasks:
    summary: Tasks summary
    description: Tasks description
    get:
      summary: Get All Tasks
      description: ''
      operationId: getTasks
      tags:
        - tasks
      responses:
        '200':
          description: 'Get All Tasks'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MasterTask'
    post:
      summary: Create task
      description: Create new tasks
      operationId: createTask
      tags:
        - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTask'
      responses:
        '200':
          description: Task Sucessfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterTask'
        
  /tasks/{taskId}:
    get:
      summary: Get Single Task
      description: |- 
        Get Single Task based on taskId. A taskId is a *unique Id*
      operationId: getTaskById
      parameters:
        - name: taskId
          description: TaskId whose details are to be fetched
          in : path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get All Tasks'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTask'
        
components:
  schemas:
    CreateTask:
      type: object
      properties:
        description:
          type: string
        order:
          type: number
        createdAt:
          type: number
          format: date-time
    UpdateTaskPatch:
      type: object
      description: ORDER - "1", DESCRIPTION - "Some Description", COMPLETED - "True/False"
      properties:
        field:
          type: string
          enum:
            - ORDER
            - DESCRIPTION
            - COMPLETED
        fieldValue:
          oneOf:
            - $ref: '#/components/schemas/TaskOrderUpdate'
            - $ref: '#/components/schemas/DescriptionUpdate'
            - $ref: '#/components/schemas/StateUpdate'
    TaskOrderUpdate:
      type: number
    DescriptionUpdate:
      type: string
    StateUpdate:
      type: boolean
    MasterTask:
      type: object
      properties:
        taskid:
          type: string
          format: uuid
        order:
          type: number
        description:
          type: string
        createdAt:
          type: string
          format: date-timea
        updatedAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time